{"ast":null,"code":"var _jsxFileName = \"/Users/koushik/kickstart/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Card, Button } from 'semantic-ui-react';\nimport factory from '../ethereum/factory';\nimport Layout from '../components/Layout'; // npm run dev -- start the server\n\nclass CampaignIndex extends Component {\n  // The next server only renders getInitialProps unlike normal react apps\n  // where you can perform data loading with componentDidMount. So, in this app,\n  // we are using getInitialProps for data loading\n  // When you put static keyword, you can run the function without creating an\n  // instance of the component\n  static async getInitialProps() {\n    const campaigns = await factory.methods.getDeployedCampaigns().call(); // returns an object to be used as props (properties) of the component\n\n    return {\n      campaigns\n    };\n  }\n\n  renderCampaigns() {\n    // map() applies the function (inside it) over all the elements of the\n    // array and returns all the 'returns' to the variable on the left.\n    const items = this.props.campaigns.map(address => {\n      // fluid: yes, makes the card strech over the whole width of page, if\n      // unobstructed\n      return {\n        header: address,\n        description: __jsx(\"a\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 22\n          }\n        }, \"View Campaign\"),\n        fluid: true\n      };\n    });\n    return __jsx(Card.Group, {\n      items: items,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 12\n      }\n    });\n  }\n\n  render() {\n    return __jsx(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, __jsx(\"link\", {\n      async: true,\n      rel: \"stylesheet\",\n      href: \"//cdn.jsdelivr.net/npm/semantic-ui@2.0.0/dist/semantic.min.css\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }), __jsx(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, \"Open Campaigns\"), this.renderCampaigns(), __jsx(Button, {\n      content: \"Create Campaign\",\n      icon: \"add circle\",\n      primary: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }))); // Primary adds color to the button\n  }\n\n} // Next expects that we export a react component in every page\n\n\nexport default CampaignIndex;","map":{"version":3,"sources":["/Users/koushik/kickstart/pages/index.js"],"names":["React","Component","Card","Button","factory","Layout","CampaignIndex","getInitialProps","campaigns","methods","getDeployedCampaigns","call","renderCampaigns","items","props","map","address","header","description","fluid","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,IAAR,EAAcC,MAAd,QAA2B,mBAA3B;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,MAAP,MAAmB,sBAAnB,C,CACA;;AAEA,MAAMC,aAAN,SAA4BL,SAA5B,CAAsC;AACpC;AACA;AACA;AACA;AACA;AAC4B,eAAfM,eAAe,GAAG;AAC7B,UAAMC,SAAS,GAAG,MAAMJ,OAAO,CAACK,OAAR,CAAgBC,oBAAhB,GAAuCC,IAAvC,EAAxB,CAD6B,CAE7B;;AACA,WAAO;AAACH,MAAAA;AAAD,KAAP;AACD;;AAEDI,EAAAA,eAAe,GAAG;AAChB;AACA;AACA,UAAMC,KAAK,GAAG,KAAKC,KAAL,CAAWN,SAAX,CAAqBO,GAArB,CAAyBC,OAAO,IAAI;AAChD;AACA;AACA,aAAO;AACLC,QAAAA,MAAM,EAAED,OADH;AAELE,QAAAA,WAAW,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFR;AAGLC,QAAAA,KAAK,EAAE;AAHF,OAAP;AAKD,KARa,CAAd;AASA,WAAO,MAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAIN,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AACDO,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAM,MAAA,KAAK,MAAX;AAAY,MAAA,GAAG,EAAC,YAAhB;AAA6B,MAAA,IAAI,EAAC,gEAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFA,EAIC,KAAKR,eAAL,EAJD,EAKA,MAAC,MAAD;AACE,MAAA,OAAO,EAAC,iBADV;AAEE,MAAA,IAAI,EAAC,YAFP;AAGE,MAAA,OAAO,MAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALA,CADF,CADF,CADO,CAgBT;AACC;;AA3CmC,C,CA8CtC;;;AACA,eAAeN,aAAf","sourcesContent":["import React, {Component} from 'react';\nimport {Card, Button} from 'semantic-ui-react';\nimport factory from '../ethereum/factory';\nimport Layout from '../components/Layout';\n// npm run dev -- start the server\n\nclass CampaignIndex extends Component {\n  // The next server only renders getInitialProps unlike normal react apps\n  // where you can perform data loading with componentDidMount. So, in this app,\n  // we are using getInitialProps for data loading\n  // When you put static keyword, you can run the function without creating an\n  // instance of the component\n  static async getInitialProps() {\n    const campaigns = await factory.methods.getDeployedCampaigns().call();\n    // returns an object to be used as props (properties) of the component\n    return {campaigns};\n  }\n\n  renderCampaigns() {\n    // map() applies the function (inside it) over all the elements of the\n    // array and returns all the 'returns' to the variable on the left.\n    const items = this.props.campaigns.map(address => {\n      // fluid: yes, makes the card strech over the whole width of page, if\n      // unobstructed\n      return {\n        header: address,\n        description: <a>View Campaign</a>,\n        fluid: true\n      };\n    });\n    return <Card.Group items = {items}/>;\n  }\n  render() {\n    return (\n      <Layout>\n        <div>\n        <link async rel=\"stylesheet\" href=\"//cdn.jsdelivr.net/npm/semantic-ui@2.0.0/dist/semantic.min.css\"/>\n        <h3>Open Campaigns</h3>\n\n        {this.renderCampaigns()}\n        <Button\n          content=\"Create Campaign\"\n          icon=\"add circle\"\n          primary\n        />\n        </div>\n      </Layout>\n    );\n  // Primary adds color to the button\n  }\n}\n\n// Next expects that we export a react component in every page\nexport default CampaignIndex;\n"]},"metadata":{},"sourceType":"module"}