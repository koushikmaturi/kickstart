{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Layout from '../../components/Layout';\nimport Campaign from '../../ethereum/campaign';\nimport { Card, Grid, Button } from \"semantic-ui-react\";\nimport web3 from '../../ethereum/web3';\nimport ContributeForm from '../../components/ContributeForm';\n\nvar CampaignShow = /*#__PURE__*/function (_Component) {\n  _inherits(CampaignShow, _Component);\n\n  var _super = _createSuper(CampaignShow);\n\n  function CampaignShow() {\n    _classCallCheck(this, CampaignShow);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(CampaignShow, [{\n    key: \"renderCards\",\n    value: function renderCards() {\n      var _this$props = this.props,\n          minimumContribution = _this$props.minimumContribution,\n          balance = _this$props.balance,\n          requestCount = _this$props.requestCount,\n          approversCount = _this$props.approversCount,\n          manager = _this$props.manager;\n      var items = [{\n        header: manager,\n        meta: 'Address of the Manager',\n        description: 'Manager is the creator of the campaign. ' + 'Only the manager cann raise new requests to withdraw money.',\n        style: {\n          overflowWrap: \"break-word\"\n        }\n      }, {\n        header: minimumContribution,\n        meta: 'Minimum Contribution (wei)',\n        description: 'Amount you must contribute to become a contributor and approver.'\n      }, {\n        header: requestCount,\n        meta: 'Number of Requests',\n        description: 'Requests are used to withdraw money from the campaign and ' + 'use it buy supplies, etc.'\n      }, {\n        header: approversCount,\n        meta: 'Number of Contributors/Approvers',\n        description: 'Number of Contributors/Approvers for the campaign.'\n      }, {\n        header: web3.utils.fromWei(balance, 'ether'),\n        meta: 'Balance of the Contract (ether)',\n        description: 'Capital left in the campaign for expenditure'\n      }];\n      return __jsx(Card.Group, {\n        items: items\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(Layout, null, __jsx(\"h3\", null, \"Campaign Show\"), __jsx(Grid, null, __jsx(Grid.Column, null, this.renderCards()), __jsx(Grid.Column, null, __jsx(ContributeForm, null))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(props) {\n      var campaign, summary;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              campaign = Campaign(props.query.address);\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(campaign.methods.getSummary().call());\n\n            case 3:\n              summary = _context.sent;\n              return _context.abrupt(\"return\", {\n                address: props.query.address,\n                minimumContribution: summary[0],\n                balance: summary[1],\n                requestCount: summary[2],\n                approversCount: summary[3],\n                manager: summary[4]\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }]);\n\n  return CampaignShow;\n}(Component);\n\nexport default CampaignShow;","map":{"version":3,"sources":["/Users/koushik/kickstart/pages/campaigns/show.js"],"names":["React","Component","Layout","Campaign","Card","Grid","Button","web3","ContributeForm","CampaignShow","props","minimumContribution","balance","requestCount","approversCount","manager","items","header","meta","description","style","overflowWrap","utils","fromWei","renderCards","campaign","query","address","methods","getSummary","call","summary"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,MAArB,QAAmC,mBAAnC;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;;IACMC,Y;;;;;;;;;;;;;WAkBJ,uBAAc;AAAA,wBAOR,KAAKC,KAPG;AAAA,UAEVC,mBAFU,eAEVA,mBAFU;AAAA,UAGVC,OAHU,eAGVA,OAHU;AAAA,UAIVC,YAJU,eAIVA,YAJU;AAAA,UAKVC,cALU,eAKVA,cALU;AAAA,UAMVC,OANU,eAMVA,OANU;AAQZ,UAAMC,KAAK,GAAG,CACZ;AACEC,QAAAA,MAAM,EAAEF,OADV;AAEEG,QAAAA,IAAI,EAAE,wBAFR;AAGEC,QAAAA,WAAW,EAAE,6CACX,6DAJJ;AAKEC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,YAAY,EAAE;AAAhB;AALT,OADY,EAQZ;AACEJ,QAAAA,MAAM,EAAEN,mBADV;AAEEO,QAAAA,IAAI,EAAE,4BAFR;AAGEC,QAAAA,WAAW,EAAE;AAHf,OARY,EAaZ;AACEF,QAAAA,MAAM,EAAEJ,YADV;AAEEK,QAAAA,IAAI,EAAE,oBAFR;AAGEC,QAAAA,WAAW,EAAE,+DACX;AAJJ,OAbY,EAmBZ;AACEF,QAAAA,MAAM,EAAEH,cADV;AAEEI,QAAAA,IAAI,EAAE,kCAFR;AAGEC,QAAAA,WAAW,EAAE;AAHf,OAnBY,EAwBZ;AACEF,QAAAA,MAAM,EAAEV,IAAI,CAACe,KAAL,CAAWC,OAAX,CAAmBX,OAAnB,EAA4B,OAA5B,CADV;AAEEM,QAAAA,IAAI,EAAE,iCAFR;AAGEC,QAAAA,WAAW,EAAE;AAHf,OAxBY,CAAd;AA+BA,aAAO,MAAC,IAAD,CAAM,KAAN;AAAY,QAAA,KAAK,EAAEH;AAAnB,QAAP;AACD;;;WAED,kBAAS;AACP,aACE,MAAC,MAAD,QACE,kCADF,EAEE,MAAC,IAAD,QACE,MAAC,IAAD,CAAM,MAAN,QACG,KAAKQ,WAAL,EADH,CADF,EAIE,MAAC,IAAD,CAAM,MAAN,QACE,MAAC,cAAD,OADF,CAJF,CAFF,CADF;AAaD;;;WAxED,yBAA6Bd,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AACQe,cAAAA,QADR,GACmBtB,QAAQ,CAACO,KAAK,CAACgB,KAAN,CAAYC,OAAb,CAD3B;AAAA;AAAA,+CAEwBF,QAAQ,CAACG,OAAT,CAAiBC,UAAjB,GAA8BC,IAA9B,EAFxB;;AAAA;AAEQC,cAAAA,OAFR;AAAA,+CAMS;AACLJ,gBAAAA,OAAO,EAAEjB,KAAK,CAACgB,KAAN,CAAYC,OADhB;AAELhB,gBAAAA,mBAAmB,EAAEoB,OAAO,CAAC,CAAD,CAFvB;AAGLnB,gBAAAA,OAAO,EAAEmB,OAAO,CAAC,CAAD,CAHX;AAILlB,gBAAAA,YAAY,EAAEkB,OAAO,CAAC,CAAD,CAJhB;AAKLjB,gBAAAA,cAAc,EAAEiB,OAAO,CAAC,CAAD,CALlB;AAMLhB,gBAAAA,OAAO,EAAEgB,OAAO,CAAC,CAAD;AANX,eANT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;EAFyB9B,S;;AA6E3B,eAAeQ,YAAf","sourcesContent":["import React, {Component} from 'react';\nimport Layout from '../../components/Layout';\nimport Campaign from '../../ethereum/campaign';\nimport { Card, Grid, Button } from \"semantic-ui-react\";\nimport web3 from '../../ethereum/web3';\nimport ContributeForm from '../../components/ContributeForm';\nclass CampaignShow extends Component {\n\n  static async getInitialProps(props) {\n    const campaign = Campaign(props.query.address);\n    const summary = await campaign.methods.getSummary().call();\n// Summary is an object. When we return multiple things from a function\n// in a contract, the result is returned as an object. But, the values\n// inside it can be accessed like an array, as seen below.\n    return {\n      address: props.query.address,\n      minimumContribution: summary[0],\n      balance: summary[1],\n      requestCount: summary[2],\n      approversCount: summary[3],\n      manager: summary[4]\n    };\n  }\n\n  renderCards() {\n    const {\n      minimumContribution,\n      balance,\n      requestCount,\n      approversCount,\n      manager\n    } = this.props;\n    const items = [\n      {\n        header: manager,\n        meta: 'Address of the Manager',\n        description: 'Manager is the creator of the campaign. ' +\n          'Only the manager cann raise new requests to withdraw money.',\n        style: { overflowWrap: \"break-word\" }\n      },\n      {\n        header: minimumContribution,\n        meta: 'Minimum Contribution (wei)',\n        description: 'Amount you must contribute to become a contributor and approver.'\n      },\n      {\n        header: requestCount,\n        meta: 'Number of Requests',\n        description: 'Requests are used to withdraw money from the campaign and ' +\n          'use it buy supplies, etc.'\n      },\n      {\n        header: approversCount,\n        meta: 'Number of Contributors/Approvers',\n        description: 'Number of Contributors/Approvers for the campaign.'\n      },\n      {\n        header: web3.utils.fromWei(balance, 'ether'),\n        meta: 'Balance of the Contract (ether)',\n        description: 'Capital left in the campaign for expenditure'\n      }\n    ];\n\n    return <Card.Group items={items}/>;\n  }\n\n  render() {\n    return (\n      <Layout>\n        <h3>Campaign Show</h3>\n        <Grid>\n          <Grid.Column>\n            {this.renderCards()}\n          </Grid.Column>\n          <Grid.Column>\n            <ContributeForm />\n          </Grid.Column>\n        </Grid>\n      </Layout>\n    );\n  }\n}\n\nexport default CampaignShow;\n"]},"metadata":{},"sourceType":"module"}