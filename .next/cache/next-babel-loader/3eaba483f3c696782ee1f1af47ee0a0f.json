{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Form, Button, Input, Message } from 'semantic-ui-react';\nimport Layout from '../../components/Layout';\nimport factory from '../../ethereum/factory';\nimport web3 from '../../ethereum/web3'; // Router helps with automatic re-routing and Link (not imported here)\n// is for placing manual links through anchor tags\n\nimport { Router } from '../../routes'; // class component, so it has state and constructor calls props\n\nclass CampaignNew extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      minimumContribution: '',\n      errorMessage: '',\n      loading: false\n    });\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      // Prevent the browser page from attempting to\n      // submit the form after pressing Submit\n      // We want to perform some steps on interval it\n      event.preventDefault();\n      this.setState({\n        loading: true,\n        errorMessage: ''\n      });\n\n      try {\n        // Getting a list of accounts to send a transaction for creating a contract\n        const accounts = await web3.eth.getAccounts(); // Create campaign as the create a campaign form is submitted\n\n        await factory.methods.createCampaign(this.state.minimumContribution).send({\n          from: accounts[0]\n        }); // Redirecting to the Homepage after campaign creation\n\n        Router.pushRoute('/');\n      } catch (err) {\n        this.setState({\n          errorMessage: err.message\n        });\n      }\n\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    // Not placing () after this.onSubmit because we dont want\n    // to run the function right away. We just want to pass a reference to it\n    // So, it runs onn form submittal\n    // The error property of Form must be added so that the form only renders\n    // the error messages when there is an error. The error prop must be a boolean\n    // So, we are converting this.state.errorMessage string into boolean value using\n    // !!this.state.errorMessage (First ! negates the value gives the opposite bool)\n    // The second ! flips the bool to give the accurate bool of the string existence\n    return __jsx(Layout, null, __jsx(\"h3\", null, \"Create a Campaign\"), __jsx(Form, {\n      onSubmit: this.onSubmit,\n      error: !!this.state.errorMessage\n    }, __jsx(Form.Field, null, __jsx(\"label\", null, \"Minimum Contribution\"), __jsx(Input, {\n      label: \"wei\",\n      labelPosition: \"right\",\n      value: this.state.minimumContribution,\n      onChange: event => this.setState({\n        minimumContribution: event.target.value\n      })\n    })), __jsx(Message, {\n      error: true,\n      header: \"Oops!\",\n      content: this.state.errorMessage\n    }), __jsx(Button, {\n      loading: this.state.loading,\n      primary: true\n    }, \"Create!\")));\n  }\n\n}\n\nexport default CampaignNew;","map":{"version":3,"sources":["/Users/koushik/kickstart/pages/campaigns/new.js"],"names":["React","Component","Form","Button","Input","Message","Layout","factory","web3","Router","CampaignNew","minimumContribution","errorMessage","loading","event","preventDefault","setState","accounts","eth","getAccounts","methods","createCampaign","state","send","from","pushRoute","err","message","render","onSubmit","target","value"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,IAAR,EAAcC,MAAd,EAAsBC,KAAtB,EAA6BC,OAA7B,QAA2C,mBAA3C;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,IAAP,MAAiB,qBAAjB,C,CACA;AACA;;AACA,SAAQC,MAAR,QAAqB,cAArB,C,CACA;;AACA,MAAMC,WAAN,SAA0BT,SAA1B,CAAoC;AAAA;AAAA;;AAAA,mCAE1B;AACNU,MAAAA,mBAAmB,EAAE,EADf;AAENC,MAAAA,YAAY,EAAE,EAFR;AAGNC,MAAAA,OAAO,EAAE;AAHH,KAF0B;;AAAA,sCAUvB,MAAOC,KAAP,IAAiB;AAC1B;AACA;AACA;AACAA,MAAAA,KAAK,CAACC,cAAN;AAEA,WAAKC,QAAL,CAAc;AAACH,QAAAA,OAAO,EAAC,IAAT;AAAeD,QAAAA,YAAY,EAAE;AAA7B,OAAd;;AACA,UAAI;AACF;AACA,cAAMK,QAAQ,GAAG,MAAMT,IAAI,CAACU,GAAL,CAASC,WAAT,EAAvB,CAFE,CAGF;;AACA,cAAMZ,OAAO,CAACa,OAAR,CACHC,cADG,CACY,KAAKC,KAAL,CAAWX,mBADvB,EAEHY,IAFG,CAEE;AAACC,UAAAA,IAAI,EAAEP,QAAQ,CAAC,CAAD;AAAf,SAFF,CAAN,CAJE,CAQF;;AACAR,QAAAA,MAAM,CAACgB,SAAP,CAAiB,GAAjB;AACD,OAVD,CAUE,OAAMC,GAAN,EAAU;AACR,aAAKV,QAAL,CAAc;AAACJ,UAAAA,YAAY,EAAEc,GAAG,CAACC;AAAnB,SAAd;AACH;;AAED,WAAKX,QAAL,CAAc;AAACH,QAAAA,OAAO,EAAC;AAAT,OAAd;AACD,KAhCiC;AAAA;;AAiClCe,EAAAA,MAAM,GAAG;AACP;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA,WACE,MAAC,MAAD,QACE,sCADF,EAEE,MAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKC,QAArB;AAA+B,MAAA,KAAK,EAAE,CAAC,CAAC,KAAKP,KAAL,CAAWV;AAAnD,OACE,MAAC,IAAD,CAAM,KAAN,QACE,4CADF,EAEE,MAAC,KAAD;AACE,MAAA,KAAK,EAAC,KADR;AAEE,MAAA,aAAa,EAAC,OAFhB;AAGE,MAAA,KAAK,EAAE,KAAKU,KAAL,CAAWX,mBAHpB;AAIE,MAAA,QAAQ,EAAEG,KAAK,IACb,KAAKE,QAAL,CAAc;AAAEL,QAAAA,mBAAmB,EAAEG,KAAK,CAACgB,MAAN,CAAaC;AAApC,OAAd;AALJ,MAFF,CADF,EAWE,MAAC,OAAD;AAAS,MAAA,KAAK,MAAd;AAAe,MAAA,MAAM,EAAC,OAAtB;AAA8B,MAAA,OAAO,EAAE,KAAKT,KAAL,CAAWV;AAAlD,MAXF,EAYE,MAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKU,KAAL,CAAWT,OAA5B;AAAqC,MAAA,OAAO;AAA5C,iBAZF,CAFF,CADF;AAmBD;;AA9DiC;;AAiEpC,eAAeH,WAAf","sourcesContent":["import React, {Component} from 'react';\nimport {Form, Button, Input, Message} from 'semantic-ui-react';\nimport Layout from '../../components/Layout';\nimport factory from '../../ethereum/factory';\nimport web3 from '../../ethereum/web3';\n// Router helps with automatic re-routing and Link (not imported here)\n// is for placing manual links through anchor tags\nimport {Router} from '../../routes';\n// class component, so it has state and constructor calls props\nclass CampaignNew extends Component {\n  // We used an event handler to set the state of minimumContribution\n  state = {\n    minimumContribution: '',\n    errorMessage: '',\n    loading: false\n  };\n\n// Using arrow function instead of a normal method so that the scope of\n// 'this' is not confusing to use.\n  onSubmit = async (event) => {\n    // Prevent the browser page from attempting to\n    // submit the form after pressing Submit\n    // We want to perform some steps on interval it\n    event.preventDefault();\n\n    this.setState({loading:true, errorMessage: ''});\n    try {\n      // Getting a list of accounts to send a transaction for creating a contract\n      const accounts = await web3.eth.getAccounts();\n      // Create campaign as the create a campaign form is submitted\n      await factory.methods\n        .createCampaign(this.state.minimumContribution)\n        .send({from: accounts[0]});\n\n      // Redirecting to the Homepage after campaign creation\n      Router.pushRoute('/');\n    } catch(err){\n        this.setState({errorMessage: err.message});\n    }\n\n    this.setState({loading:false});\n  };\n  render() {\n    // Not placing () after this.onSubmit because we dont want\n    // to run the function right away. We just want to pass a reference to it\n    // So, it runs onn form submittal\n\n    // The error property of Form must be added so that the form only renders\n    // the error messages when there is an error. The error prop must be a boolean\n    // So, we are converting this.state.errorMessage string into boolean value using\n    // !!this.state.errorMessage (First ! negates the value gives the opposite bool)\n    // The second ! flips the bool to give the accurate bool of the string existence\n    return (\n      <Layout>\n        <h3>Create a Campaign</h3>\n        <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\n          <Form.Field>\n            <label>Minimum Contribution</label>\n            <Input\n              label='wei'\n              labelPosition='right'\n              value={this.state.minimumContribution}\n              onChange={event =>\n                this.setState({ minimumContribution: event.target.value })}\n            />\n          </Form.Field>\n          <Message error header='Oops!' content={this.state.errorMessage}/>\n          <Button loading={this.state.loading} primary>Create!</Button>\n        </Form>\n      </Layout>\n  );\n  }\n}\n\nexport default CampaignNew;\n"]},"metadata":{},"sourceType":"module"}