{"ast":null,"code":"var __jsx = React.createElement;\n// Solidity doesn't support returning array of structs.\n// So, it will be challenging to get a list of requests and details\nimport React, { Component } from 'react';\nimport { Button } from 'semantic-ui-react';\nimport { Link } from '../../../routes';\nimport Layout from '../../../components/Layout';\nimport Campaign from \"../../../ethereum/campaign\";\n\nclass RequestIndex extends Component {\n  static async getInitialProps(props) {\n    const {\n      address\n    } = props.query;\n    const campaign = Campaign(address);\n    const requestCount = await campaign.methods.getRequestsCount().call();\n    const approversCount = await campaign.methods.approversCount().call();\n    const requests = await Promise.all(Array(parseInt(requestCount)).fill().map((element, index) => {\n      return campaign.methods.requests(index).call();\n    }));\n    return {\n      address,\n      requests,\n      requestCount,\n      approversCount\n    };\n  }\n\n  render() {\n    return __jsx(Layout, null, __jsx(\"h3\", null, \"Requests\"), __jsx(Link, {\n      route: `/campaigns/${this.props.address}/requests/new`\n    }, __jsx(\"a\", null, __jsx(Button, {\n      primary: true\n    }, \"Add Request\"))));\n  }\n\n}\n\nexport default RequestIndex;","map":{"version":3,"sources":["/Users/koushik/kickstart/pages/campaigns/requests/index.js"],"names":["React","Component","Button","Link","Layout","Campaign","RequestIndex","getInitialProps","props","address","query","campaign","requestCount","methods","getRequestsCount","call","approversCount","requests","Promise","all","Array","parseInt","fill","map","element","index","render"],"mappings":";AAAA;AACA;AACA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,MAAR,QAAqB,mBAArB;AACA,SAAQC,IAAR,QAAmB,iBAAnB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;;AACA,MAAMC,YAAN,SAA2BL,SAA3B,CAAqC;AAEP,eAAfM,eAAe,CAACC,KAAD,EAAQ;AAClC,UAAM;AAAEC,MAAAA;AAAF,QAAcD,KAAK,CAACE,KAA1B;AACA,UAAMC,QAAQ,GAAGN,QAAQ,CAACI,OAAD,CAAzB;AACA,UAAMG,YAAY,GAAG,MAAMD,QAAQ,CAACE,OAAT,CAAiBC,gBAAjB,GAAoCC,IAApC,EAA3B;AACA,UAAMC,cAAc,GAAG,MAAML,QAAQ,CAACE,OAAT,CAAiBG,cAAjB,GAAkCD,IAAlC,EAA7B;AAEA,UAAME,QAAQ,GAAG,MAAMC,OAAO,CAACC,GAAR,CACrBC,KAAK,CAACC,QAAQ,CAACT,YAAD,CAAT,CAAL,CACGU,IADH,GAEGC,GAFH,CAEO,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACvB,aAAOd,QAAQ,CAACE,OAAT,CAAiBI,QAAjB,CAA0BQ,KAA1B,EAAiCV,IAAjC,EAAP;AACD,KAJH,CADqB,CAAvB;AAOA,WAAO;AAAEN,MAAAA,OAAF;AAAWQ,MAAAA,QAAX;AAAqBL,MAAAA,YAArB;AAAmCI,MAAAA;AAAnC,KAAP;AACD;;AAEDU,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,MAAD,QACE,6BADF,EAEE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAG,cAAa,KAAKlB,KAAL,CAAWC,OAAQ;AAA9C,OACA,iBACA,MAAC,MAAD;AAAQ,MAAA,OAAO;AAAf,qBADA,CADA,CAFF,CADF;AAUD;;AA7BkC;;AAgCrC,eAAeH,YAAf","sourcesContent":["// Solidity doesn't support returning array of structs.\n// So, it will be challenging to get a list of requests and details\nimport React, {Component} from 'react';\nimport {Button} from 'semantic-ui-react';\nimport {Link} from '../../../routes';\nimport Layout from '../../../components/Layout';\nimport Campaign from \"../../../ethereum/campaign\";\nclass RequestIndex extends Component {\n\n  static async getInitialProps(props) {\n    const { address } = props.query;\n    const campaign = Campaign(address);\n    const requestCount = await campaign.methods.getRequestsCount().call();\n    const approversCount = await campaign.methods.approversCount().call();\n\n    const requests = await Promise.all(\n      Array(parseInt(requestCount))\n        .fill()\n        .map((element, index) => {\n          return campaign.methods.requests(index).call();\n        })\n    );\n    return { address, requests, requestCount, approversCount };\n  }\n\n  render() {\n    return (\n      <Layout>\n        <h3>Requests</h3>\n        <Link route={`/campaigns/${this.props.address}/requests/new`}>\n        <a>\n        <Button primary>Add Request</Button>\n        </a>\n        </Link>\n      </Layout>\n    );\n  }\n}\n\nexport default RequestIndex;\n"]},"metadata":{},"sourceType":"module"}