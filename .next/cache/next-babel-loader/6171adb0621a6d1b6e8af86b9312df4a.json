{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Form, Button, Input, Message } from 'semantic-ui-react';\nimport Campaign from \"../../../ethereum/campaign\";\nimport web3 from \"../../../ethereum/web3\";\nimport Layout from '../../../components/Layout';\nimport { Link, Router } from '../../../routes';\n\nclass RequestNew extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      description: '',\n      value: '',\n      recipient: '',\n      errorMessage: '',\n      loading: false\n    });\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      event.preventDefault();\n      this.setState({\n        loading: true,\n        errorMessage: ''\n      });\n      const campaign = Campaign(this.props.address);\n      const {\n        description,\n        value,\n        recipient\n      } = this.state;\n\n      try {\n        const accounts = await web3.eth.getAccounts();\n        await campaign.methods.createRequest(description, web3.utils.toWei(value, 'ether'), recipient).send({\n          from: accounts[0]\n        });\n        Router.pushRoute(`/campaigns/${this.props.address}/requests`);\n      } catch (err) {\n        this.setState({\n          errorMessage: err.message\n        });\n      }\n\n      this.setState({\n        description: '',\n        value: '',\n        recipient: '',\n        loading: false\n      });\n    });\n  }\n\n  static async getInitialProps(props) {\n    const {\n      address\n    } = props.query;\n    return {\n      address\n    };\n  }\n\n  render() {\n    return __jsx(Layout, null, __jsx(\"h3\", null, \"Create a New Request\"), __jsx(Form, null, __jsx(Form.Field, {\n      onSubmit: this.onSubmit,\n      error: !!this.state.errorMessage\n    }, __jsx(\"label\", null, \"Description\"), __jsx(Input, {\n      value: this.state.description,\n      onChange: event => this.setState({\n        description: event.target.value\n      })\n    })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Request Amount\"), __jsx(Input, {\n      label: \"ether\",\n      labelPosition: \"right\",\n      value: this.state.value,\n      onChange: event => this.setState({\n        value: event.target.value\n      })\n    })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Recipient Address\"), __jsx(Input, {\n      value: this.state.recipient,\n      onChange: event => this.setState({\n        recipient: event.target.value\n      })\n    })), __jsx(Message, {\n      error: true,\n      header: \"Oops!\",\n      content: this.state.errorMessage\n    }), __jsx(Button, {\n      loading: this.state.loading,\n      primary: true\n    }, \"Create\")));\n  }\n\n}\n\nexport default RequestNew;","map":{"version":3,"sources":["/Users/koushik/kickstart/pages/campaigns/requests/new.js"],"names":["React","Component","Form","Button","Input","Message","Campaign","web3","Layout","Link","Router","RequestNew","description","value","recipient","errorMessage","loading","event","preventDefault","setState","campaign","props","address","state","accounts","eth","getAccounts","methods","createRequest","utils","toWei","send","from","pushRoute","err","message","getInitialProps","query","render","onSubmit","target"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Form, Button, Input, Message} from 'semantic-ui-react';\nimport Campaign from \"../../../ethereum/campaign\";\nimport web3 from \"../../../ethereum/web3\";\nimport Layout from '../../../components/Layout';\nimport {Link, Router} from '../../../routes';\nclass RequestNew extends Component {\n\n  static async getInitialProps(props) {\n    const {address} = props.query;\n    return {address};\n  }\n\n  state = {\n    description: '',\n    value: '',\n    recipient:'',\n    errorMessage: '',\n    loading: false\n  };\n\n  onSubmit = async (event) => {\n    event.preventDefault();\n    this.setState({loading:true, errorMessage:''});\n    const campaign = Campaign(this.props.address);\n    const {description,value,recipient} = this.state;\n\n    try {\n      const accounts = await web3.eth.getAccounts();\n      await campaign.methods\n        .createRequest(description,web3.utils.toWei(value,'ether'),recipient)\n        .send({from:accounts[0]});\n      Router.pushRoute(`/campaigns/${this.props.address}/requests`);\n    } catch (err) {\n      this.setState({errorMessage: err.message});\n    }\n    this.setState({description:'', value: '', recipient:'', loading:false});\n  };\n\n  render() {\n    return (\n      <Layout>\n        <h3>Create a New Request</h3>\n        <Form>\n          <Form.Field onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\n            <label>Description</label>\n            <Input\n              value={this.state.description}\n              onChange={(event) =>\n                this.setState({description:event.target.value})}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Request Amount</label>\n            <Input\n              label='ether'\n              labelPosition='right'\n              value={this.state.value}\n              onChange={(event) =>\n                this.setState({value:event.target.value})}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Recipient Address</label>\n            <Input\n              value={this.state.recipient}\n              onChange={(event) =>\n                this.setState({recipient:event.target.value})}\n            />\n          </Form.Field>\n          <Message error header=\"Oops!\" content={this.state.errorMessage} />\n          <Button loading={this.state.loading} primary>\n            Create\n          </Button>\n        </Form>\n      </Layout>\n    );\n  }\n}\n\nexport default RequestNew;\n"]},"metadata":{},"sourceType":"module"}