{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Form, Button, Input, Message } from 'semantic-ui-react';\nimport Campaign from '../ethereum/campaign';\nimport web3 from '../ethereum/web3';\n\nclass ContributeForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      value: '',\n      errorMessage: '',\n      loading: false\n    });\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      event.preventDefault();\n      const campaign = Campaign(this.props.address);\n\n      try {\n        const accounts = await web3.eth.getAccounts();\n        await campaign.methods.contribute().send({\n          from: accounts[0],\n          value: web3.utils.toWei(this.state.value, 'ether')\n        });\n      } catch (err) {\n        this.setState({\n          errorMessage: err.message\n        });\n      }\n    });\n  }\n\n  render() {\n    return __jsx(Form, {\n      onSubmit: this.onSubmit\n    }, __jsx(Form.Field, null, __jsx(\"label\", null, \"Amount to Contribute\"), __jsx(Input, {\n      label: \"ether\",\n      labelPosition: \"right\",\n      value: this.state.value,\n      onChange: event => this.setState({\n        value: event.target.value\n      })\n    })), __jsx(Message, {\n      error: true,\n      header: \"Oops!\",\n      content: this.state.errorMessage\n    }), __jsx(Button, {\n      loading: this.state.loading,\n      primary: true\n    }, \"Contribute!\"));\n  }\n\n}\n\nexport default ContributeForm;","map":{"version":3,"sources":["/Users/koushik/kickstart/components/ContributeForm.js"],"names":["React","Component","Form","Button","Input","Message","Campaign","web3","ContributeForm","value","errorMessage","loading","event","preventDefault","campaign","props","address","accounts","eth","getAccounts","methods","contribute","send","from","utils","toWei","state","err","setState","message","render","onSubmit","target"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,IAAR,EAAcC,MAAd,EAAsBC,KAAtB,EAA6BC,OAA7B,QAA2C,mBAA3C;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;;AACA,MAAMC,cAAN,SAA6BP,SAA7B,CAAuC;AAAA;AAAA;;AAAA,mCAC7B;AACNQ,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,YAAY,EAAE,EAFR;AAGNC,MAAAA,OAAO,EAAE;AAHH,KAD6B;;AAAA,sCAM1B,MAAOC,KAAP,IAAiB;AAC1BA,MAAAA,KAAK,CAACC,cAAN;AACA,YAAMC,QAAQ,GAAGR,QAAQ,CAAC,KAAKS,KAAL,CAAWC,OAAZ,CAAzB;;AAEA,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMV,IAAI,CAACW,GAAL,CAASC,WAAT,EAAvB;AACA,cAAML,QAAQ,CAACM,OAAT,CAAiBC,UAAjB,GAA8BC,IAA9B,CAAmC;AACvCC,UAAAA,IAAI,EAAEN,QAAQ,CAAC,CAAD,CADyB;AAEvCR,UAAAA,KAAK,EAAEF,IAAI,CAACiB,KAAL,CAAWC,KAAX,CAAiB,KAAKC,KAAL,CAAWjB,KAA5B,EAAkC,OAAlC;AAFgC,SAAnC,CAAN;AAID,OAND,CAME,OAAOkB,GAAP,EAAY;AACZ,aAAKC,QAAL,CAAc;AAAClB,UAAAA,YAAY,EAAEiB,GAAG,CAACE;AAAnB,SAAd;AACD;AAEF,KApBoC;AAAA;;AAqBrCC,EAAAA,MAAM,GAAG;AAEP,WACE,MAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKC;AAArB,OACE,MAAC,IAAD,CAAM,KAAN,QACE,4CADF,EAEE,MAAC,KAAD;AACE,MAAA,KAAK,EAAC,OADR;AAEE,MAAA,aAAa,EAAC,OAFhB;AAGE,MAAA,KAAK,EAAE,KAAKL,KAAL,CAAWjB,KAHpB;AAIE,MAAA,QAAQ,EAAEG,KAAK,IAAI,KAAKgB,QAAL,CAAc;AAACnB,QAAAA,KAAK,EAACG,KAAK,CAACoB,MAAN,CAAavB;AAApB,OAAd;AAJrB,MAFF,CADF,EAUE,MAAC,OAAD;AAAS,MAAA,KAAK,MAAd;AAAe,MAAA,MAAM,EAAC,OAAtB;AAA8B,MAAA,OAAO,EAAE,KAAKiB,KAAL,CAAWhB;AAAlD,MAVF,EAWE,MAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKgB,KAAL,CAAWf,OAA5B;AAAqC,MAAA,OAAO;AAA5C,qBAXF,CADF;AAiBD;;AAxCoC;;AA2CvC,eAAeH,cAAf","sourcesContent":["import React, {Component} from 'react';\nimport {Form, Button, Input, Message} from 'semantic-ui-react';\nimport Campaign from '../ethereum/campaign';\nimport web3 from '../ethereum/web3';\nclass ContributeForm extends Component {\n  state = {\n    value: '',\n    errorMessage: '',\n    loading: false\n  };\n  onSubmit = async (event) => {\n    event.preventDefault();\n    const campaign = Campaign(this.props.address);\n\n    try {\n      const accounts = await web3.eth.getAccounts();\n      await campaign.methods.contribute().send({\n        from: accounts[0],\n        value: web3.utils.toWei(this.state.value,'ether')\n      });\n    } catch (err) {\n      this.setState({errorMessage: err.message});\n    }\n\n  };\n  render() {\n\n    return (\n      <Form onSubmit={this.onSubmit}>\n        <Form.Field>\n          <label>Amount to Contribute</label>\n          <Input\n            label='ether'\n            labelPosition='right'\n            value={this.state.value}\n            onChange={event => this.setState({value:event.target.value})}\n          />\n        </Form.Field>\n        <Message error header='Oops!' content={this.state.errorMessage}/>\n        <Button loading={this.state.loading} primary>\n          Contribute!\n        </Button>\n      </Form>\n    );\n  }\n}\n\nexport default ContributeForm;\n"]},"metadata":{},"sourceType":"module"}