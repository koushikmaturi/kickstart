{"ast":null,"code":"var _jsxFileName = \"/Users/koushik/kickstart/pages/campaigns/new.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Form, Button, Input } from 'semantic-ui-react';\nimport Layout from '../../components/Layout';\nimport factory from '../../ethereum/factory';\nimport web3 from '../../ethereum/web3'; // class component, so it has state and constructor calls props\n\nclass CampaignNew extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      minimumContribution: ''\n    });\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      // Prevent the browser page from attempting to\n      // submit the form after pressing Submit\n      // We want to perform some steps on interval it\n      event.preventDefault(); // Getting a list of accounts to send a transaction for creating a contract\n\n      const accounts = await web3.eth.getAccounts(); // Create campaign as the create a campaign form is submitted\n\n      await factory.method.createCampaign(this.state.minimumContribution).send({\n        from: accounts[0]\n      });\n    });\n  }\n\n  render() {\n    return __jsx(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }, __jsx(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }, \"Create a Campaign\"), __jsx(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, __jsx(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }, __jsx(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, \"Minimum Contribution\"), __jsx(Input, {\n      label: \"wei\",\n      labelPosition: \"right\",\n      value: this.state.minimumContribution,\n      onChange: event => this.setState({\n        minimumContribution: event.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    })), __jsx(Button, {\n      primary: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }, \"Create!\")));\n  }\n\n}\n\nexport default CampaignNew;","map":{"version":3,"sources":["/Users/koushik/kickstart/pages/campaigns/new.js"],"names":["React","Component","Form","Button","Input","Layout","factory","web3","CampaignNew","minimumContribution","event","preventDefault","accounts","eth","getAccounts","method","createCampaign","state","send","from","render","setState","target","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,IAAR,EAAcC,MAAd,EAAsBC,KAAtB,QAAkC,mBAAlC;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,IAAP,MAAiB,qBAAjB,C,CACA;;AACA,MAAMC,WAAN,SAA0BP,SAA1B,CAAoC;AAAA;AAAA;;AAAA,mCAE1B;AACNQ,MAAAA,mBAAmB,EAAE;AADf,KAF0B;;AAAA,sCAQvB,MAAOC,KAAP,IAAiB;AAC1B;AACA;AACA;AACAA,MAAAA,KAAK,CAACC,cAAN,GAJ0B,CAK1B;;AACA,YAAMC,QAAQ,GAAG,MAAML,IAAI,CAACM,GAAL,CAASC,WAAT,EAAvB,CAN0B,CAO1B;;AACA,YAAMR,OAAO,CAACS,MAAR,CACHC,cADG,CACY,KAAKC,KAAL,CAAWR,mBADvB,EAEHS,IAFG,CAEE;AAACC,QAAAA,IAAI,EAAEP,QAAQ,CAAC,CAAD;AAAf,OAFF,CAAN;AAGD,KAnBiC;AAAA;;AAoBlCQ,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAEE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,EAEE,MAAC,KAAD;AACE,MAAA,KAAK,EAAC,KADR;AAEE,MAAA,aAAa,EAAC,OAFhB;AAGE,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWR,mBAHpB;AAIE,MAAA,QAAQ,EAAEC,KAAK,IACb,KAAKW,QAAL,CAAc;AAAEZ,QAAAA,mBAAmB,EAAEC,KAAK,CAACY,MAAN,CAAaC;AAApC,OAAd,CALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,EAWE,MAAC,MAAD;AAAQ,MAAA,OAAO,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAXF,CAFF,CADF;AAkBD;;AAvCiC;;AA0CpC,eAAef,WAAf","sourcesContent":["import React, {Component} from 'react';\nimport {Form, Button, Input} from 'semantic-ui-react';\nimport Layout from '../../components/Layout';\nimport factory from '../../ethereum/factory';\nimport web3 from '../../ethereum/web3';\n// class component, so it has state and constructor calls props\nclass CampaignNew extends Component {\n  // We used an event handler to set the state of minimumContribution\n  state = {\n    minimumContribution: ''\n  };\n\n// Using arrow function instead of a normal method so that the scope of\n// 'this' is not confusing to use.\n  onSubmit = async (event) => {\n    // Prevent the browser page from attempting to\n    // submit the form after pressing Submit\n    // We want to perform some steps on interval it\n    event.preventDefault();\n    // Getting a list of accounts to send a transaction for creating a contract\n    const accounts = await web3.eth.getAccounts();\n    // Create campaign as the create a campaign form is submitted\n    await factory.method\n      .createCampaign(this.state.minimumContribution)\n      .send({from: accounts[0]});\n  };\n  render() {\n    return (\n      <Layout>\n        <h3>Create a Campaign</h3>\n        <Form>\n          <Form.Field>\n            <label>Minimum Contribution</label>\n            <Input\n              label='wei'\n              labelPosition='right'\n              value={this.state.minimumContribution}\n              onChange={event =>\n                this.setState({ minimumContribution: event.target.value })}\n            />\n          </Form.Field>\n          <Button primary>Create!</Button>\n        </Form>\n      </Layout>\n  );\n  }\n}\n\nexport default CampaignNew;\n"]},"metadata":{},"sourceType":"module"}