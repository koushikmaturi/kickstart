{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Layout from '../../components/Layout';\nimport Campaign from '../../ethereum/campaign';\nimport { Card, Grid, Button } from \"semantic-ui-react\";\nimport web3 from '../../ethereum/web3';\n\nclass CampaignShow extends Component {\n  static async getInitialProps(props) {\n    const campaign = Campaign(props.query.address);\n    const summary = await campaign.methods.getSummary().call(); // Summary is an object. When we return multiple things from a function\n    // in a contract, the result is returned as an object. But, the values\n    // inside it can be accessed like an array, as seen below.\n\n    return {\n      address: props.query.address,\n      minimumContribution: summary[0],\n      balance: summary[1],\n      requestCount: summary[2],\n      approversCount: summary[3],\n      manager: summary[4]\n    };\n  }\n\n  renderCards() {\n    const {\n      minimumContribution,\n      balance,\n      requestCount,\n      approversCount,\n      manager\n    } = this.props;\n    const items = [{\n      header: manager,\n      meta: 'Address of the Manager',\n      description: 'Manager is the creator of the campaign. ' + 'Only the manager cann raise new requests to withdraw money.',\n      style: {\n        overflowWrap: \"break-word\"\n      }\n    }, {\n      header: minimumContribution,\n      meta: 'Minimum Contribution (wei)',\n      description: 'Amount you must contribute to become a contributor and approver.'\n    }, {\n      header: requestCount,\n      meta: 'Number of Requests',\n      description: 'Requests are used to withdraw money from the campaign and ' + 'use it buy supplies, etc.'\n    }, {\n      header: approversCount,\n      meta: 'Number of Contributors/Approvers',\n      description: 'Number of Contributors/Approvers for the campaign.'\n    }, {\n      header: web3.utils.fromWei(balance, 'ether'),\n      meta: 'Balance of the Contract (ether)',\n      description: 'Capital left in the campaign for expenditure'\n    }];\n    return __jsx(Card.Group, {\n      items: items\n    });\n  }\n\n  render() {\n    return __jsx(Layout, null, __jsx(\"h3\", null, \"Campaign Show\"), this.renderCards());\n  }\n\n}\n\nexport default CampaignShow;","map":{"version":3,"sources":["/Users/koushik/kickstart/pages/campaigns/show.js"],"names":["React","Component","Layout","Campaign","Card","Grid","Button","web3","CampaignShow","getInitialProps","props","campaign","query","address","summary","methods","getSummary","call","minimumContribution","balance","requestCount","approversCount","manager","renderCards","items","header","meta","description","style","overflowWrap","utils","fromWei","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,MAArB,QAAmC,mBAAnC;AACA,OAAOC,IAAP,MAAiB,qBAAjB;;AACA,MAAMC,YAAN,SAA2BP,SAA3B,CAAqC;AAEP,eAAfQ,eAAe,CAACC,KAAD,EAAQ;AAClC,UAAMC,QAAQ,GAAGR,QAAQ,CAACO,KAAK,CAACE,KAAN,CAAYC,OAAb,CAAzB;AACA,UAAMC,OAAO,GAAG,MAAMH,QAAQ,CAACI,OAAT,CAAiBC,UAAjB,GAA8BC,IAA9B,EAAtB,CAFkC,CAGtC;AACA;AACA;;AACI,WAAO;AACLJ,MAAAA,OAAO,EAAEH,KAAK,CAACE,KAAN,CAAYC,OADhB;AAELK,MAAAA,mBAAmB,EAAEJ,OAAO,CAAC,CAAD,CAFvB;AAGLK,MAAAA,OAAO,EAAEL,OAAO,CAAC,CAAD,CAHX;AAILM,MAAAA,YAAY,EAAEN,OAAO,CAAC,CAAD,CAJhB;AAKLO,MAAAA,cAAc,EAAEP,OAAO,CAAC,CAAD,CALlB;AAMLQ,MAAAA,OAAO,EAAER,OAAO,CAAC,CAAD;AANX,KAAP;AAQD;;AAEDS,EAAAA,WAAW,GAAG;AACZ,UAAM;AACJL,MAAAA,mBADI;AAEJC,MAAAA,OAFI;AAGJC,MAAAA,YAHI;AAIJC,MAAAA,cAJI;AAKJC,MAAAA;AALI,QAMF,KAAKZ,KANT;AAOA,UAAMc,KAAK,GAAG,CACZ;AACEC,MAAAA,MAAM,EAAEH,OADV;AAEEI,MAAAA,IAAI,EAAE,wBAFR;AAGEC,MAAAA,WAAW,EAAE,6CACX,6DAJJ;AAKEC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,YAAY,EAAE;AAAhB;AALT,KADY,EAQZ;AACEJ,MAAAA,MAAM,EAAEP,mBADV;AAEEQ,MAAAA,IAAI,EAAE,4BAFR;AAGEC,MAAAA,WAAW,EAAE;AAHf,KARY,EAaZ;AACEF,MAAAA,MAAM,EAAEL,YADV;AAEEM,MAAAA,IAAI,EAAE,oBAFR;AAGEC,MAAAA,WAAW,EAAE,+DACX;AAJJ,KAbY,EAmBZ;AACEF,MAAAA,MAAM,EAAEJ,cADV;AAEEK,MAAAA,IAAI,EAAE,kCAFR;AAGEC,MAAAA,WAAW,EAAE;AAHf,KAnBY,EAwBZ;AACEF,MAAAA,MAAM,EAAElB,IAAI,CAACuB,KAAL,CAAWC,OAAX,CAAmBZ,OAAnB,EAA4B,OAA5B,CADV;AAEEO,MAAAA,IAAI,EAAE,iCAFR;AAGEC,MAAAA,WAAW,EAAE;AAHf,KAxBY,CAAd;AA+BA,WAAO,MAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAEH;AAAnB,MAAP;AACD;;AAEDQ,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,MAAD,QACE,kCADF,EAEG,KAAKT,WAAL,EAFH,CADF;AAMD;;AAnEkC;;AAsErC,eAAef,YAAf","sourcesContent":["import React, {Component} from 'react';\nimport Layout from '../../components/Layout';\nimport Campaign from '../../ethereum/campaign';\nimport { Card, Grid, Button } from \"semantic-ui-react\";\nimport web3 from '../../ethereum/web3';\nclass CampaignShow extends Component {\n\n  static async getInitialProps(props) {\n    const campaign = Campaign(props.query.address);\n    const summary = await campaign.methods.getSummary().call();\n// Summary is an object. When we return multiple things from a function\n// in a contract, the result is returned as an object. But, the values\n// inside it can be accessed like an array, as seen below.\n    return {\n      address: props.query.address,\n      minimumContribution: summary[0],\n      balance: summary[1],\n      requestCount: summary[2],\n      approversCount: summary[3],\n      manager: summary[4]\n    };\n  }\n\n  renderCards() {\n    const {\n      minimumContribution,\n      balance,\n      requestCount,\n      approversCount,\n      manager\n    } = this.props;\n    const items = [\n      {\n        header: manager,\n        meta: 'Address of the Manager',\n        description: 'Manager is the creator of the campaign. ' +\n          'Only the manager cann raise new requests to withdraw money.',\n        style: { overflowWrap: \"break-word\" }\n      },\n      {\n        header: minimumContribution,\n        meta: 'Minimum Contribution (wei)',\n        description: 'Amount you must contribute to become a contributor and approver.'\n      },\n      {\n        header: requestCount,\n        meta: 'Number of Requests',\n        description: 'Requests are used to withdraw money from the campaign and ' +\n          'use it buy supplies, etc.'\n      },\n      {\n        header: approversCount,\n        meta: 'Number of Contributors/Approvers',\n        description: 'Number of Contributors/Approvers for the campaign.'\n      },\n      {\n        header: web3.utils.fromWei(balance, 'ether'),\n        meta: 'Balance of the Contract (ether)',\n        description: 'Capital left in the campaign for expenditure'\n      }\n    ];\n\n    return <Card.Group items={items}/>;\n  }\n\n  render() {\n    return (\n      <Layout>\n        <h3>Campaign Show</h3>\n        {this.renderCards()}\n      </Layout>\n    );\n  }\n}\n\nexport default CampaignShow;\n"]},"metadata":{},"sourceType":"module"}