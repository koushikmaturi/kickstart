{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Form, Button, Input, Message } from 'semantic-ui-react';\nimport Campaign from '../ethereum/campaign';\nimport web3 from '../ethereum/web3';\nimport { Router } from '../routes';\n\nvar ContributeForm = /*#__PURE__*/function (_Component) {\n  _inherits(ContributeForm, _Component);\n\n  var _super = _createSuper(ContributeForm);\n\n  function ContributeForm() {\n    var _this;\n\n    _classCallCheck(this, ContributeForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      value: '',\n      errorMessage: '',\n      loading: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\", function _callee(event) {\n      var campaign, accounts;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n\n              _this.setState({\n                loading: true,\n                errorMessage: ''\n              });\n\n              campaign = Campaign(_this.props.address);\n              _context.prev = 3;\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(web3.eth.getAccounts());\n\n            case 6:\n              accounts = _context.sent;\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(campaign.methods.contribute().send({\n                from: accounts[0],\n                value: web3.utils.toWei(_this.state.value, 'ether')\n              }));\n\n            case 9:\n              // After the transaction is completed, the cards on\n              // the campaign page aren't automatically updated\n              // with the new info. This step will essentially\n              // reload the page, so getInitialProps will run again\n              // and fetch the summary of the contract\n              Router.replaceRoute(\"/campaigns/\".concat(_this.props.address));\n              _context.next = 15;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](3);\n\n              _this.setState({\n                errorMessage: _context.t0.message\n              });\n\n            case 15:\n              _this.setState({\n                loading: false,\n                value: ''\n              });\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[3, 12]], Promise);\n    });\n\n    return _this;\n  }\n\n  _createClass(ContributeForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Form, {\n        onSubmit: this.onSubmit,\n        error: !!this.state.errorMessage\n      }, __jsx(Form.Field, null, __jsx(\"label\", null, \"Amount to Contribute\"), __jsx(Input, {\n        label: \"ether\",\n        labelPosition: \"right\",\n        value: this.state.value,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            value: event.target.value\n          });\n        }\n      })), __jsx(Message, {\n        error: true,\n        header: \"Oops!\",\n        content: this.state.errorMessage\n      }), __jsx(Button, {\n        loading: this.state.loading,\n        primary: true\n      }, \"Contribute!\"));\n    }\n  }]);\n\n  return ContributeForm;\n}(Component);\n\nexport default ContributeForm;","map":{"version":3,"sources":["/Users/koushik/kickstart/components/ContributeForm.js"],"names":["React","Component","Form","Button","Input","Message","Campaign","web3","Router","ContributeForm","value","errorMessage","loading","event","preventDefault","setState","campaign","props","address","eth","getAccounts","accounts","methods","contribute","send","from","utils","toWei","state","replaceRoute","message","onSubmit","target"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,IAAR,EAAcC,MAAd,EAAsBC,KAAtB,EAA6BC,OAA7B,QAA2C,mBAA3C;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,SAAQC,MAAR,QAAqB,WAArB;;IACMC,c;;;;;;;;;;;;;;;;4DACI;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,YAAY,EAAE,EAFR;AAGNC,MAAAA,OAAO,EAAE;AAHH,K;;+DAOG,iBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACTA,cAAAA,KAAK,CAACC,cAAN;;AACA,oBAAKC,QAAL,CAAc;AAACH,gBAAAA,OAAO,EAAC,IAAT;AAAeD,gBAAAA,YAAY,EAAE;AAA7B,eAAd;;AACMK,cAAAA,QAHG,GAGQV,QAAQ,CAAC,MAAKW,KAAL,CAAWC,OAAZ,CAHhB;AAAA;AAAA;AAAA,+CAMgBX,IAAI,CAACY,GAAL,CAASC,WAAT,EANhB;;AAAA;AAMDC,cAAAA,QANC;AAAA;AAAA,+CAODL,QAAQ,CAACM,OAAT,CAAiBC,UAAjB,GAA8BC,IAA9B,CAAmC;AACvCC,gBAAAA,IAAI,EAAEJ,QAAQ,CAAC,CAAD,CADyB;AAEvCX,gBAAAA,KAAK,EAAEH,IAAI,CAACmB,KAAL,CAAWC,KAAX,CAAiB,MAAKC,KAAL,CAAWlB,KAA5B,EAAkC,OAAlC;AAFgC,eAAnC,CAPC;;AAAA;AAWP;AACA;AACA;AACA;AACA;AACAF,cAAAA,MAAM,CAACqB,YAAP,sBAAkC,MAAKZ,KAAL,CAAWC,OAA7C;AAhBO;AAAA;;AAAA;AAAA;AAAA;;AAkBP,oBAAKH,QAAL,CAAc;AAACJ,gBAAAA,YAAY,EAAE,YAAImB;AAAnB,eAAd;;AAlBO;AAoBT,oBAAKf,QAAL,CAAc;AAACH,gBAAAA,OAAO,EAAC,KAAT;AAAgBF,gBAAAA,KAAK,EAAC;AAAtB,eAAd;;AApBS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;WAwBX,kBAAS;AAAA;;AAEP,aACE,MAAC,IAAD;AAAM,QAAA,QAAQ,EAAE,KAAKqB,QAArB;AAA+B,QAAA,KAAK,EAAE,CAAC,CAAC,KAAKH,KAAL,CAAWjB;AAAnD,SACE,MAAC,IAAD,CAAM,KAAN,QACE,4CADF,EAEE,MAAC,KAAD;AACE,QAAA,KAAK,EAAC,OADR;AAEE,QAAA,aAAa,EAAC,OAFhB;AAGE,QAAA,KAAK,EAAE,KAAKiB,KAAL,CAAWlB,KAHpB;AAIE,QAAA,QAAQ,EAAE,kBAAAG,KAAK;AAAA,iBAAI,MAAI,CAACE,QAAL,CAAc;AAACL,YAAAA,KAAK,EAACG,KAAK,CAACmB,MAAN,CAAatB;AAApB,WAAd,CAAJ;AAAA;AAJjB,QAFF,CADF,EAUE,MAAC,OAAD;AAAS,QAAA,KAAK,MAAd;AAAe,QAAA,MAAM,EAAC,OAAtB;AAA8B,QAAA,OAAO,EAAE,KAAKkB,KAAL,CAAWjB;AAAlD,QAVF,EAWE,MAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKiB,KAAL,CAAWhB,OAA5B;AAAqC,QAAA,OAAO;AAA5C,uBAXF,CADF;AAiBD;;;;EAnD0BX,S;;AAsD7B,eAAeQ,cAAf","sourcesContent":["import React, {Component} from 'react';\nimport {Form, Button, Input, Message} from 'semantic-ui-react';\nimport Campaign from '../ethereum/campaign';\nimport web3 from '../ethereum/web3';\nimport {Router} from '../routes';\nclass ContributeForm extends Component {\n  state = {\n    value: '',\n    errorMessage: '',\n    loading: false\n  };\n\n\n  onSubmit = async (event) => {\n    event.preventDefault();\n    this.setState({loading:true, errorMessage: ''});\n    const campaign = Campaign(this.props.address);\n\n    try {\n      const accounts = await web3.eth.getAccounts();\n      await campaign.methods.contribute().send({\n        from: accounts[0],\n        value: web3.utils.toWei(this.state.value,'ether')\n      });\n      // After the transaction is completed, the cards on\n      // the campaign page aren't automatically updated\n      // with the new info. This step will essentially\n      // reload the page, so getInitialProps will run again\n      // and fetch the summary of the contract\n      Router.replaceRoute(`/campaigns/${this.props.address}`);\n    } catch (err) {\n      this.setState({errorMessage: err.message});\n    }\n    this.setState({loading:false, value:''});\n  };\n\n\n  render() {\n\n    return (\n      <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\n        <Form.Field>\n          <label>Amount to Contribute</label>\n          <Input\n            label='ether'\n            labelPosition='right'\n            value={this.state.value}\n            onChange={event => this.setState({value:event.target.value})}\n          />\n        </Form.Field>\n        <Message error header='Oops!' content={this.state.errorMessage}/>\n        <Button loading={this.state.loading} primary>\n          Contribute!\n        </Button>\n      </Form>\n    );\n  }\n}\n\nexport default ContributeForm;\n"]},"metadata":{},"sourceType":"module"}