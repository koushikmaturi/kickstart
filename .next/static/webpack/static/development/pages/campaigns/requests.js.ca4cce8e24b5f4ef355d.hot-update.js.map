{"version":3,"file":"static/webpack/static/development/pages/campaigns/requests.js.ca4cce8e24b5f4ef355d.hot-update.js","sources":["webpack:///./pages/campaigns/requests/index.js"],"sourcesContent":["// Solidity doesn't support returning array of structs.\n// So, it will be challenging to get a list of requests and details\nimport React, {Component} from 'react';\nimport {Button, Table} from 'semantic-ui-react';\nimport {Link} from '../../../routes';\nimport Layout from '../../../components/Layout';\nimport Campaign from '../../../ethereum/campaign';\nimport RequestRow from '../../../components/RequestRow';\nclass RequestIndex extends Component {\n\n  static async getInitialProps(props) {\n    const { address } = props.query;\n    const campaign = Campaign(address);\n    const requestCount = await campaign.methods.getRequestsCount().call();\n    const approversCount = await campaign.methods.approversCount().call();\n\n    const requests = await Promise.all(\n      Array(parseInt(requestCount))\n        .fill()\n        .map((element, index) => {\n          return campaign.methods.requests(index).call();\n        })\n    );\n    return { address, requests, requestCount, approversCount };\n  }\n\n  renderRows() {\n    return this.props.requests.map((request,index) => {\n      return (\n        <RequestRow\n          key={index}\n          id={index}\n          request={request}\n          address={this.props.address}\n          approversCount={this.props.approversCount}\n      />\n      );\n    });\n  }\n\n  render() {\n    // Using some ES 16 code to simplify tale creation\n    // Instead of typing Table.Header, Table.Row, etc\n    // Now we can njust type the word and its enough\n    const {Header, Row, HeaderCell, Body} = Table;\n    return (\n      <Layout>\n        <h3>Requests</h3>\n        <Link route={`/campaigns/${this.props.address}/requests/new`}>\n        <a>\n        <Button primary floated='right' style={{marginBottom:10}}>Add Request</Button>\n        </a>\n        </Link>\n        <Table>\n          <Header>\n            <Row>\n              <HeaderCell>ID</HeaderCell>\n              <HeaderCell>Description</HeaderCell>\n              <HeaderCell>Amount</HeaderCell>\n              <HeaderCell>Recipient</HeaderCell>\n              <HeaderCell>Approval Count</HeaderCell>\n              <HeaderCell>Approve</HeaderCell>\n              <HeaderCell>Finalize</HeaderCell>\n            </Row>\n          </Header>\n          <Body>\n            {this.renderRows()}\n          </Body>\n        </Table>\n        <div>Found {this.props.requestCount} requests.</div>\n      </Layout>\n    );\n  }\n}\n\nexport default RequestIndex;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;AAkBA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;;;AAEA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAKA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsBA;;;AA9DA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AADA;AAGA;AAHA;AAAA;AACA;AADA;AAIA;AAJA;AAAA;AAUA;AACA;AACA;AAZA;AAMA;AANA;AAaA;AAAA;AAAA;AAAA;AAAA;AACA;AAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAFA;AACA;AAkEA;;;;A","sourceRoot":""}